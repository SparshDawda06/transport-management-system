"""initial schema

Revision ID: 1e6baa9b6f58
Revises: 
Create Date: 2025-10-08 18:17:35.679941

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1e6baa9b6f58'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('booking_agents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('phone', sa.String(length=32), nullable=True),
    sa.Column('gstin', sa.String(length=32), nullable=True),
    sa.Column('pan', sa.String(length=16), nullable=True),
    sa.Column('city', sa.String(length=128), nullable=True),
    sa.Column('state', sa.String(length=64), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('booking_agents', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_booking_agents_name'), ['name'], unique=False)

    op.create_table('consignees',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('address', sa.String(length=512), nullable=True),
    sa.Column('gstin', sa.String(length=32), nullable=True),
    sa.Column('pan', sa.String(length=16), nullable=True),
    sa.Column('city', sa.String(length=128), nullable=True),
    sa.Column('state', sa.String(length=64), nullable=True),
    sa.Column('phone', sa.String(length=32), nullable=True),
    sa.Column('email', sa.String(length=128), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('gstin'),
    sa.UniqueConstraint('name', 'city', 'state', name='uq_consignee_name_loc')
    )
    with op.batch_alter_table('consignees', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_consignees_name'), ['name'], unique=False)

    op.create_table('consignors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('address', sa.String(length=512), nullable=True),
    sa.Column('gstin', sa.String(length=32), nullable=True),
    sa.Column('pan', sa.String(length=16), nullable=True),
    sa.Column('city', sa.String(length=128), nullable=True),
    sa.Column('state', sa.String(length=64), nullable=True),
    sa.Column('phone', sa.String(length=32), nullable=True),
    sa.Column('email', sa.String(length=128), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('gstin'),
    sa.UniqueConstraint('name', 'city', 'state', name='uq_consignor_name_loc')
    )
    with op.batch_alter_table('consignors', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_consignors_name'), ['name'], unique=False)

    op.create_table('drivers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('address', sa.String(length=512), nullable=True),
    sa.Column('license_no', sa.String(length=64), nullable=False),
    sa.Column('validity', sa.Date(), nullable=True),
    sa.Column('aadhar', sa.String(length=20), nullable=True),
    sa.Column('phone', sa.String(length=32), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('license_no')
    )
    with op.batch_alter_table('drivers', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_drivers_name'), ['name'], unique=False)

    op.create_table('goods',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('description')
    )
    op.create_table('owners',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('phone', sa.String(length=32), nullable=True),
    sa.Column('pan', sa.String(length=16), nullable=True),
    sa.Column('aadhar', sa.String(length=20), nullable=True),
    sa.Column('address', sa.String(length=512), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('owners', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_owners_name'), ['name'], unique=False)

    op.create_table('pin_codes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=False),
    sa.Column('state', sa.String(length=64), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('pin_codes', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_pin_codes_code'), ['code'], unique=True)

    op.create_table('stations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('state', sa.String(length=64), nullable=True),
    sa.Column('pin_code', sa.String(length=10), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('transaction_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('entity', sa.String(length=64), nullable=False),
    sa.Column('entity_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(length=64), nullable=False),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('transaction_logs', schema=None) as batch_op:
        batch_op.create_index('ix_tx_entity', ['entity', 'entity_id'], unique=False)

    op.create_table('addresses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('line1', sa.String(length=255), nullable=True),
    sa.Column('line2', sa.String(length=255), nullable=True),
    sa.Column('city', sa.String(length=128), nullable=True),
    sa.Column('state', sa.String(length=64), nullable=True),
    sa.Column('pin_code_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['pin_code_id'], ['pin_codes.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('station_id', sa.Integer(), nullable=False),
    sa.Column('consignor_id', sa.Integer(), nullable=False),
    sa.Column('consignee_id', sa.Integer(), nullable=False),
    sa.Column('goods_id', sa.Integer(), nullable=False),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('description', sa.String(length=512), nullable=True),
    sa.Column('booking_agent_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=32), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['booking_agent_id'], ['booking_agents.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['consignee_id'], ['consignees.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['consignor_id'], ['consignors.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['goods_id'], ['goods.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['station_id'], ['stations.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('orders', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_orders_status'), ['status'], unique=False)

    op.create_table('vehicles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lorry_no', sa.String(length=32), nullable=False),
    sa.Column('capacity', sa.Float(), nullable=True),
    sa.Column('chassis_no', sa.String(length=64), nullable=True),
    sa.Column('engine_no', sa.String(length=64), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('driver_id', sa.Integer(), nullable=True),
    sa.Column('rc_file', sa.String(length=255), nullable=True),
    sa.Column('insurance_file', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['driver_id'], ['drivers.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['owner_id'], ['owners.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('vehicles', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_vehicles_lorry_no'), ['lorry_no'], unique=True)

    op.create_table('builty',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('vehicle_id', sa.Integer(), nullable=False),
    sa.Column('driver_id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('from_station_id', sa.Integer(), nullable=False),
    sa.Column('to_station_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=32), nullable=True),
    sa.Column('invoice_no', sa.String(length=64), nullable=True),
    sa.Column('lr_file', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['driver_id'], ['drivers.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['from_station_id'], ['stations.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['owner_id'], ['owners.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['to_station_id'], ['stations.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['vehicle_id'], ['vehicles.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('order_id')
    )
    with op.batch_alter_table('builty', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_builty_status'), ['status'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('builty', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_builty_status'))

    op.drop_table('builty')
    with op.batch_alter_table('vehicles', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_vehicles_lorry_no'))

    op.drop_table('vehicles')
    with op.batch_alter_table('orders', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_orders_status'))

    op.drop_table('orders')
    op.drop_table('addresses')
    with op.batch_alter_table('transaction_logs', schema=None) as batch_op:
        batch_op.drop_index('ix_tx_entity')

    op.drop_table('transaction_logs')
    op.drop_table('stations')
    with op.batch_alter_table('pin_codes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_pin_codes_code'))

    op.drop_table('pin_codes')
    with op.batch_alter_table('owners', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_owners_name'))

    op.drop_table('owners')
    op.drop_table('goods')
    with op.batch_alter_table('drivers', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_drivers_name'))

    op.drop_table('drivers')
    with op.batch_alter_table('consignors', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_consignors_name'))

    op.drop_table('consignors')
    with op.batch_alter_table('consignees', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_consignees_name'))

    op.drop_table('consignees')
    with op.batch_alter_table('booking_agents', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_booking_agents_name'))

    op.drop_table('booking_agents')
    # ### end Alembic commands ###
